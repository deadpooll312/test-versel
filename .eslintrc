{
  "parser": "babel-eslint",
  "env": {
    "browser": true,
    "jest": true,
    "mocha": true
  },
  "plugins": ["prettier", "compat"],
  "extends": ["react-app", "airbnb", "plugin:react/recommended"],

  "settings": {
    "react": {
      "createClass": "createReactClass",
      "pragma": "React",
      "version": "detect"
    }
  },

  "rules": {
    "complexity": 0,
    "no-plusplus": 0,
    "no-continue": "off",
    "no-console": ["error", { "allow": ["warn", "error"] }],
    "indent": ["error", 2],
    "guard-for-in": "off",
    "linebreak-style": "off",
    "no-restricted-syntax": "off",
    "no-param-reassign": "off",  //Bad code style.
    "no-shadow": "off",
    "no-else-return": "off",
    "no-restricted-globals": "off",
    "func-names": "off",  //Need refactoring memoize
    "no-return-assign": "off",
    "no-nested-ternary": "off",
    "consistent-return": "off",
    "class-methods-use-this": "off",
    "getter-return": "off",
    "prefer-destructuring": ["error", {"object": true, "array": false}],
    "prefer-const": ["error", {"destructuring": "all"}],
    "camelcase": 0,  ///It seems you need to think about the style to use or its lipo underline for naming variables.
    "max-nested-callbacks": ["error", 3],
    "max-depth": ["error", 3],
    "react/jsx-filename-extension": ["warn", { "extensions": [".js", ".jsx"] }],
    "react/no-array-index-key": 0,
    "react/prefer-stateless-function": 0,
    "react/jsx-indent": ["error", 2],
    "react/no-children-prop": 0,
    "react/jsx-indent-props": ["error", 2],
    "react/jsx-props-no-multi-spaces": "off",
    "react/prop-types": 0,  //Bad code style
    "react/no-multi-comp": 0,
    "react/require-default-props": 0,
    "react/forbid-prop-types": 0,
    "react/no-unescaped-entities": "warn",
    "react/destructuring-assignment": [0],
    "react/display-name": [0],
    "react/no-did-update-set-state": [0],
    "no-prototype-builtins": "off",
    "react/sort-comp": ["warn", {
      "order": [
        "type-annotations",
        "static-methods",
        "lifecycle",
        "everything-else",
        "render"
      ]
    }],
    "semi": [2, "always"],
    "arrow-body-style": "warn",
    "max-len": ["error", 120],
    "no-unused-expressions": 0,
    "no-unused-vars": ["warn"],
    "arrow-parens": ["error", "as-needed"],
    "object-curly-newline": ["off", {"multiline": true}],

    "react/default-props-match-prop-types": "off",
    "react/jsx-one-expression-per-line": "off", // doesn't work properly on Windows 10

    "no-underscore-dangle": "off",
    "import/no-extraneous-dependencies": "off",
    "import/no-cycle": "off",
    "import/no-named-as-default-member": "off",
    "import/no-dublicates": "off",
    "import/no-self-import": "off",
    "import/extensions": "off",
    "import/prefer-default-export": "off",
    "import/no-named-as-default": "off",
    "import/no-unresolved": "off",
    "jsx-a11y/aria-role": [ 2, {
      "ignoreNonDOM": true
    }],
    "import/order": ["error", {
      "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
      "pathGroups": [
        {
          "pattern": "API/**",
          "group": "internal",
          "position": "after"
        },
        {
          "pattern": "API",
          "group": "internal",
          "position": "after"
        },
        {
          "pattern": "hooks/**",
          "group": "internal",
          "position": "after"
        },
        {
          "pattern": "components/**",
          "group": "internal",
          "position": "after"
        },
        {
          "pattern": "containers/**",
          "group": "internal",
          "position": "after"
        },
        {
          "pattern": "common/**",
          "group": "internal",
          "position": "after"
        },
        {
          "pattern": "config/**",
          "group": "internal",
          "position": "after"
        },
        {
          "pattern": "store",
          "group": "internal",
          "position": "after"
        },
        {
          "pattern": "store/**",
          "group": "internal",
          "position": "after"
        },
        {
          "pattern": "utils/**",
          "group": "internal",
          "position": "after"
        },
        {
          "pattern": "../../../**",
          "group": "parent",
          "position": "after"
        },
        {
          "pattern": "../../**",
          "group": "parent",
          "position": "after"
        },
        {
          "pattern": "../**",
          "group": "parent",
          "position": "after"
        }
      ],
      "pathGroupsExcludedImportTypes": ["builtin"],
      "newlines-between":"always"
    }],
    "no-restricted-imports": ["error", {
      "paths": [{
        "name": "lodash",
        "importNames": ["get"],
        "message": "Please use utils/safeGet instead."
      }, {
        "name": "lodash/get",
        "message": "Please use utils/safeGet instead."
      }]
    }],
    "jsx-a11y/media-has-caption": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "jsx-a11y/anchor-is-valid": [ "error", { "components": [ "Link" ], "specialLink": [ "to" ] } ],
    "jsx-a11y/label-has-for": "off",
    "react/react-in-jsx-scope": "off",
    "react/button-has-type": "off"
  }
}

